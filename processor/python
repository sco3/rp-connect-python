package processor

import (
	"context"
	"github.com/redpanda-data/benthos/v4/public/service"
)

type pythonProcessor struct {
	logger *service.Logger
}

func init() {
	configSpec := service.NewConfigSpec()

	ctor := func(conf *service.ParsedConfig, mgr *service.Resources) (service.Processor, error) {
		return newPythonProcessor(mgr.Logger(), mgr.Metrics()), nil
	}

	err := service.RegisterProcessor("python", configSpec, ctor)
	if err != nil {
		panic(err)
	}
}

func newPythonProcessor(logger *service.Logger, metrics *service.Metrics) *pythonProcessor {
	return &pythonProcessor{
		logger: logger
	}
}

func (p *pythonProcessor) Process(ctx context.Context, m *service.Message) (service.MessageBatch, error) {
	return nil, nil
}

func (p *pythonProcessor) Close(ctx context.Context) error {
	return nil
}